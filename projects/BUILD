load("@rules_python//python:defs.bzl", "py_binary")

py_binary(
    name = "99bottles",
    srcs = ["99bottles.py"],
)

py_binary(
    name = "Blackjack",
    srcs = ["Blackjack.py"],
)

py_binary(
    name = "BubbleSort",
    srcs = ["BubbleSort.py"],
)

py_binary(
    name = "CaesarCipher",
    srcs = ["CaesarCipher.py"],
)

py_binary(
    name = "Calculator",
    srcs = ["Calculator.py"],
)

py_binary(
    name = "ChangeCalc",
    srcs = ["ChangeCalc.py"],
)

py_binary(
    name = "CheckPalindrome",
    srcs = ["CheckPalindrome.py"],
)

py_binary(
    name = "CoinEstimator",
    srcs = ["CoinEstimator.py"],
)

py_binary(
    name = "CoinFlip",
    srcs = ["CoinFlip.py"],
)

py_binary(
    name = "Collatz",
    srcs = ["Collatz.py"],
)

py_binary(
    name = "CountVowels",
    srcs = ["CountVowels.py"],
)

py_binary(
    name = "DescriptiveStats",
    srcs = ["DescriptiveStats.py"],
)

py_binary(
    name = "DiceRoller",
    srcs = ["DiceRoller.py"],
)

py_binary(
    name = "FactorCalc",
    srcs = ["FactorCalc.py"],
)

py_binary(
    name = "FibonacciCalc",
    srcs = ["FibonacciCalc.py"],
)

py_binary(
    name = "FizzBuzz",
    srcs = ["FizzBuzz.py"],
)

py_binary(
    name = "GregoryLeibniz",
    srcs = ["GregoryLeibniz.py"],
)

py_binary(
    name = "HigherLower",
    srcs = ["HigherLower.py"],
)

py_binary(
    name = "Magic8Ball",
    srcs = ["Magic8Ball.py"],
)

py_binary(
    name = "MultiplicationTable",
    srcs = ["MultiplicationTable.py"],
)

py_binary(
    name = "Nilakantha",
    srcs = ["Nilakantha.py"],
)

py_binary(
    name = "PigLatin",
    srcs = ["PigLatin.py"],
)

py_binary(
    name = "PyTriple",
    srcs = ["PyTriple.py"],
)

py_binary(
    name = "ReverseString",
    srcs = ["ReverseString.py"],
)

py_binary(
    name = "RockPaperScissors",
    srcs = ["RockPaperScissors.py"],
)

py_binary(
    name = "SieveOfEratosthenes",
    srcs = ["SieveOfEratosthenes.py"],
)

py_binary(
    name = "TicTacToe",
    srcs = ["TicTacToe.py"],
)

py_binary(
    name = "VigenereCipher",
    srcs = ["VigenereCipher.py"],
)
