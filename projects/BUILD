load("@rules_python//python:defs.bzl", "py_binary")

py_binary(
    name = "blackjack",
    srcs = ["blackjack.py"],
)

py_binary(
    name = "bubble_sort",
    srcs = ["bubble_sort.py"],
)

py_binary(
    name = "caesar_cipher",
    srcs = ["caesar_cipher.py"],
)

py_binary(
    name = "calculator",
    srcs = ["calculator.py"],
)

py_binary(
    name = "change_calc",
    srcs = ["change_calc.py"],
)

py_binary(
    name = "check_palindrome",
    srcs = ["check_palindrome.py"],
)

py_binary(
    name = "coin_estimator",
    srcs = ["coin_estimator.py"],
)

py_binary(
    name = "coin_flip",
    srcs = ["coin_flip.py"],
)

py_binary(
    name = "collatz",
    srcs = ["collatz.py"],
)

py_binary(
    name = "count_vowels",
    srcs = ["count_vowels.py"],
)

py_binary(
    name = "descriptive_stats",
    srcs = ["descriptive_stats.py"],
)

py_binary(
    name = "dice_roller",
    srcs = ["dice_roller.py"],
)

py_binary(
    name = "factor_calc",
    srcs = ["factor_calc.py"],
)

py_binary(
    name = "fibonacci",
    srcs = ["fibonacci.py"],
)

py_binary(
    name = "fizz_buzz",
    srcs = ["fizz_buzz.py"],
)

py_binary(
    name = "gregory_leibniz",
    srcs = ["gregory_leibniz.py"],
)

py_binary(
    name = "higher_lower",
    srcs = ["higher_lower.py"],
)

py_binary(
    name = "magic_eight_ball",
    srcs = ["magic_eight_ball.py"],
)

py_binary(
    name = "multiplication_table",
    srcs = ["multiplication_table.py"],
)

py_binary(
    name = "nilakantha",
    srcs = ["nilakantha.py"],
)

py_binary(
    name = "ninety_nine_bottles",
    srcs = ["ninety_nine_bottles.py"],
)


py_binary(
    name = "pig_latin",
    srcs = ["pig_latin.py"],
)

py_binary(
    name = "py_triple",
    srcs = ["py_triple.py"],
)

py_binary(
    name = "reverse_string",
    srcs = ["reverse_string.py"],
)

py_binary(
    name = "rock_paper_scissors",
    srcs = ["rock_paper_scissors.py"],
)

py_binary(
    name = "sieve_of_eratosthenes",
    srcs = ["sieve_of_eratosthenes.py"],
)

py_binary(
    name = "tic_tac_toe",
    srcs = ["tic_tac_toe.py"],
)

py_binary(
    name = "vigenere_cipher",
    srcs = ["vigenere_cipher.py"],
)
